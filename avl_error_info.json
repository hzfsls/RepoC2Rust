[{"c_code": "void VOS_AVL_Delete(AVL_TREE *pstTree, AVL_NODE *pstNode)\n{\n    AVLBASE_NODE_S *pstBaseNode;\n    AVLBASE_TREE_S *pstBaseTree;\n\n    if ((pstTree == AVL_NULL_PTR) || (pstNode == AVL_NULL_PTR) || (!VOS_AVL_IN_TREE(*pstNode)))\n    {\n        return;\n    }\n\n    pstBaseNode = (AVLBASE_NODE_S *)pstNode;\n    pstBaseTree = (AVLBASE_TREE_S *)(void *)(&(pstTree->pstRoot));\n    VosAvlDelete(pstBaseNode, pstBaseTree);\n    return;\n}", "rust_code": "pub fn VOS_AVL_Delete(mut pstTree: Ptr<AVL_TREE>, mut pstNode: Ptr<AVL_NODE>) {\n    let mut pstBaseNode: Ptr<AVLBASE_NODE_S> = Default::default();\n    let mut pstBaseTree: Ptr<AVLBASE_TREE_S> = Default::default();\n\n    if (pstTree == AVL_NULL_PTR!()) || (pstNode == AVL_NULL_PTR!()) || (!VOS_AVL_IN_TREE!(*pstNode) {\n        return;\n    }\n\n    pstBaseNode = pstNode.cast::<AVLBASE_NODE_S>();\n    pstBaseTree = c_ref!(pstTree.pstRoot).cast::<Ptr<Void>>().cast::<AVLBASE_TREE_S>();\n    VosAvlDelete(pstBaseNode, pstBaseTree);\n    return;\n}\n", "error_msg": "    Checking my_proj v0.1.0 (/home/ytr/RepoC2Rust/created_project/avl_1741891272272)\nerror: mismatched closing delimiter: `}`\n  --> src/src/v_avlpub_c.rs:61:92\n   |\n57 | pub fn VOS_AVL_Delete(mut pstTree: Ptr<AVL_TREE>, mut pstNode: Ptr<AVL_NODE>) {\n   |                                                                               - closing delimiter possibly meant for this\n...\n61 |     if (pstTree == AVL_NULL_PTR!()).as_bool() || (pstNode == AVL_NULL_PTR!()).as_bool() || (!VOS_AVL_IN_TREE!(*pstNode).as_bool() {\n   |                                                                                            ^ unclosed delimiter\n...\n69 | }\n   | ^ mismatched closing delimiter\n\nerror: could not compile `my_proj` (lib) due to 1 previous error\n"}]