{"All": 9, "Compilation Pass": 8, "Compilation Error": 1, "Pass Rate": 0.8888888888888888, "Error Information": [{"c_code": "static uint32_t vosSha256CtxPrepare(VOS_SHA256_CTX *pstCtx, uint32_t uiLen)\n    {\n        uint32_t uiCntFirst;\n        uint32_t uiCntSec;\n\n        uiCntFirst = (pstCtx->N[0] + (uiLen << SHIFTS_PER_BYTE)) & 0xffffffffUL;\n        if (uiCntFirst < pstCtx->N[0])\n        {\n            ++pstCtx->N[1];\n            if (pstCtx->N[1] == 0)\n            {\n                pstCtx->corrupted = 1;\n                return SHA256_ERROR;\n            }\n        }\n\n        uiCntSec = pstCtx->N[1] + (uiLen >> (BITSIZE(uint32_t) - SHIFTS_PER_BYTE));\n        if (uiCntSec < pstCtx->N[1])\n        {\n            pstCtx->corrupted = 1;\n            return SHA256_ERROR;\n        }\n\n        pstCtx->N[1] = uiCntSec;\n        pstCtx->N[0] = uiCntFirst;\n        return SHA256_OK;\n    }", "rust_code": "pub fn vosSha256CtxPrepare(mut pstCtx: Ptr<VOS_SHA256_CTX>, mut uiLen: u32) -> u32 {\n    let mut uiCntFirst: u32;\n    let mut uiCntSec: u32;\n\n    uiCntFirst = (pstCtx.N[0] + (uiLen << SHIFTS_PER_BYTE!())) & 0xffffffff;\n    if (uiCntFirst < pstCtx.N[0]) {\n        pstCtx.N[1] += 1;\n        if (pstCtx.N[1] == 0) {\n            pstCtx.corrupted = 1;\n            return SHA256_ERROR!();\n        }\n    }\n\n    uiCntSec = pstCtx.N[1] + (uiLen >> (BITSIZE!(u32) - SHIFTS_PER_BYTE!()));\n    if (uiCntSec < pstCtx.N[1]) {\n        pstCtx.corrupted = 1;\n        return SHA256_ERROR!();\n    }\n\n    pstCtx.N[1] = uiCntSec;\n    pstCtx.N[0] = uiCntFirst;\n    return SHA256_OK!();\n}\n", "original_error_msg": "    Checking my_proj v0.1.0 (/home/ytr/RepoC2Rust/created_project/sha256_1744614601022)\nerror[E0423]: expected value, found macro `BITS_PRE_BYTE`\n   --> src/src/sha256_c.rs:32:53\n    |\n32  | macro_rules! BITSIZE { ($t:ty) => { c_sizeof!($t) * BITS_PRE_BYTE } }\n    |                                                     ^^^^^^^^^^^^^ not a value\n...\n101 |     uiCntSec = pstCtx.N[1] + (uiLen >> (BITSIZE!(u32) - SHIFTS_PER_BYTE!()));\n    |                                         ------------- in this macro invocation\n    |\n    = note: this error originates in the macro `BITSIZE` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nFor more information about this error, try `rustc --explain E0423`.\nerror: could not compile `my_proj` (lib) due to 1 previous error\n", "optimized_code": "pub fn vosSha256CtxPrepare(mut pstCtx: Ptr<VOS_SHA256_CTX>, mut uiLen: u32) -> u32 {\n    let mut uiCntFirst: u32;\n    let mut uiCntSec: u32;\n\n    uiCntFirst = (pstCtx.N[0] + (uiLen << SHIFTS_PER_BYTE!())) & 0xffffffff;\n    if (uiCntFirst < pstCtx.N[0]) {\n        pstCtx.N[1] += 1;\n        if (pstCtx.N[1] == 0) {\n            pstCtx.corrupted = 1;\n            return SHA256_ERROR!();\n        }\n    }\n\n    uiCntSec = pstCtx.N[1] + (uiLen >> (BITSIZE!(u32) - SHIFTS_PER_BYTE!()));\n    if (uiCntSec < pstCtx.N[1]) {\n        pstCtx.corrupted = 1;\n        return SHA256_ERROR!();\n    }\n\n    pstCtx.N[1] = uiCntSec;\n    pstCtx.N[0] = uiCntFirst;\n    return SHA256_OK!();\n}\n", "error_msg": "    Checking my_proj v0.1.0 (/home/ytr/RepoC2Rust/created_project/sha256_1744614619991)\nerror[E0423]: expected value, found macro `BITS_PRE_BYTE`\n   --> src/src/sha256_c.rs:32:53\n    |\n32  | macro_rules! BITSIZE { ($t:ty) => { c_sizeof!($t) * BITS_PRE_BYTE } }\n    |                                                     ^^^^^^^^^^^^^ not a value\n...\n101 |     uiCntSec = pstCtx.N[1] + (uiLen >> (BITSIZE!(u32) - SHIFTS_PER_BYTE!()));\n    |                                         ------------- in this macro invocation\n    |\n    = note: this error originates in the macro `BITSIZE` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nFor more information about this error, try `rustc --explain E0423`.\nerror: could not compile `my_proj` (lib) due to 1 previous error\n"}]}