{"All": 8, "Compilation Pass": 5, "Compilation Error": 3, "Pass Rate": 0.625, "Error Information": [{"c_code": "static void VOS_MD5CalcDigestOfBuff(MD5_CTX *context)\n    {\n        uint32_t i;\n        uint32_t tmpValue;\n        uint32_t textFragment[16];\n        uint32_t tmpState[4];\n        uint8_t *tmpText = context->aucBuffer;\n\n        tmpState[0] = context->aulState[0];\n        tmpState[1] = context->aulState[1];\n        tmpState[2] = context->aulState[2];\n        tmpState[3] = context->aulState[3];\n\n        for (i = 0; i < 16; i += 4)\n        {\n            textFragment[i] = (uint32_t)(tmpText[0]) + ((uint32_t)(tmpText[1]) << 8) + ((uint32_t)(tmpText[2]) << 16) +\n                              ((uint32_t)(tmpText[3]) << 24);\n\n            textFragment[i + 1] = (uint32_t)(tmpText[4]) + ((uint32_t)(tmpText[5]) << 8) +\n                                  ((uint32_t)(tmpText[6]) << 16) + ((uint32_t)(tmpText[7]) << 24);\n\n            textFragment[i + 2] = (uint32_t)(tmpText[8]) + ((uint32_t)(tmpText[9]) << 8) +\n                                  ((uint32_t)(tmpText[10]) << 16) + ((uint32_t)(tmpText[11]) << 24);\n\n            textFragment[i + 3] = (uint32_t)(tmpText[12]) + ((uint32_t)(tmpText[13]) << 8) +\n                                  ((uint32_t)(tmpText[14]) << 16) + ((uint32_t)(tmpText[15]) << 24);\n            tmpText += 16;\n        }\n\n        MD5_F_PROC(tmpValue, tmpState, textFragment);\n        MD5_G_PROC(tmpValue, tmpState, textFragment);\n        MD5_H_PROC(tmpValue, tmpState, textFragment);\n        MD5_I_PROC(tmpValue, tmpState, textFragment);\n\n        context->aulState[0] += tmpState[0];\n        context->aulState[1] += tmpState[1];\n        context->aulState[2] += tmpState[2];\n        context->aulState[3] += tmpState[3];\n    }", "rust_code": "pub fn VOS_MD5CalcDigestOfBuff(mut context: Ptr<MD5_CTX>) {\n    let mut i: u32 = Default::default();\n    let mut tmpValue: u32 = Default::default();\n    let mut textFragment: Array<u32, 16> = Default::default();\n    let mut tmpState: Array<u32, 4> = Default::default();\n    let mut tmpText: Ptr<u8> = context.aucBuffer.cast();\n\n    tmpState[0] = context.aulState[0].cast();\n    tmpState[1] = context.aulState[1].cast();\n    tmpState[2] = context.aulState[2].cast();\n    tmpState[3] = context.aulState[3].cast();\n\n    c_for!(let mut i: u32 = 0; i < 16; i += 4; {\n        textFragment[i] = (tmpText[0].cast::<u32>() + (tmpText[1].cast::<u32>() << 8) + (tmpText[2].cast::<u32>() << 16) + (tmpText[3].cast::<u32>() << 24);\n        textFragment[i + 1] = (tmpText[4].cast::<u32>() + (tmpText[5].cast::<u32>() << 8) + (tmpText[6].cast::<u32>() << 16) + (tmpText[7].cast::<u32>() << 24);\n        textFragment[i + 2] = (tmpText[8].cast::<u32>() + (tmpText[9].cast::<u32>() << 8) + (tmpText[10].cast::<u32>() << 16) + (tmpText[11].cast::<u32>() << 24);\n        textFragment[i + 3] = (tmpText[12].cast::<u32>() + (tmpText[13].cast::<u32>() << 8) + (tmpText[14].cast::<u32>() << 16) + (tmpText[15].cast::<u32>() << 24);\n        tmpText += 16;\n    });\n\n    MD5_F_PROC!(tmpValue, tmpState, textFragment);\n    MD5_G_PROC!(tmpValue, tmpState, textFragment);\n    MD5_H_PROC!(tmpValue, tmpState, textFragment);\n    MD5_I_PROC!(tmpValue, tmpState, textFragment);\n\n    context.aulState[0] += tmpState[0].cast();\n    context.aulState[1] += tmpState[1].cast();\n    context.aulState[2] += tmpState[2].cast();\n    context.aulState[3] += tmpState[3].cast();\n}\n", "error_msg": "    Checking my_proj v0.1.0 (/home/ytr/RepoC2Rust/created_project/md5_1744103854025)\nerror: mismatched closing delimiter: `}`\n   --> src/src/md5_c.rs:248:31\n    |\n244 |     c_for!(let mut i: u32 = 0; i < 16; i += 4; {\n    |                                                - closing delimiter possibly meant for this\n...\n248 |         textFragment[i + 3] = (tmpText[12].cast::<u32>() + (tmpText[13].cast::<u32>() << 8) + (tmpText[14].cast::<u32>() << 16) + (tmpTex...\n    |                               ^ unclosed delimiter\n249 |         tmpText += 16;\n250 |     });\n    |     ^ mismatched closing delimiter\n\nerror: could not compile `my_proj` (lib) due to 1 previous error\n"}, {"c_code": "static bool VOS_MD5PadBuff(MD5_CTX *context)\n    {\n\n        bool needAnotherBuff = (context->uiPos >= MD5_TEXT_IN_BUFFER_MAX);\n\n        context->aucBuffer[context->uiPos] = 0x80;\n        context->uiPos++;\n        if (needAnotherBuff)\n        {\n\n            while (context->uiPos < MD5_BUFFER_SIZE)\n            {\n                context->aucBuffer[context->uiPos] = 0;\n                context->uiPos++;\n            }\n        }\n        else\n        {\n\n            while (context->uiPos < MD5_TEXT_IN_BUFFER_MAX)\n            {\n                context->aucBuffer[context->uiPos] = 0;\n                context->uiPos++;\n            }\n\n            MD5_RECORD_MESSAGE_LEN(context);\n        }\n\n        return needAnotherBuff;\n    }", "rust_code": "pub fn VOS_MD5PadBuff(mut context: Ptr<MD5_CTX>) -> bool {\n    let mut needAnotherBuff: bool = (context.uiPos >= MD5_TEXT_IN_BUFFER_MAX!()).as_bool();\n    context.aucBuffer[context.uiPos] = 0x80;\n    context.uiPos += 1;\n    if needAnotherBuff.as_bool() {\n        while (context.uiPos < MD5_BUFFER_SIZE!()).as_bool() {\n            context.aucBuffer[context.uiPos] = 0;\n            context.uiPos += 1;\n        }\n    } else {\n        while (context.uiPos < MD5_TEXT_IN_BUFFER_MAX!()).as_bool() {\n            context.aucBuffer[context.uiPos] = 0;\n            context.uiPos += 1;\n        }\n        MD5_RECORD_MESSAGE_LEN!(context);\n    }\n    return needAnotherBuff.cast();\n}\n", "error_msg": "    Checking my_proj v0.1.0 (/home/ytr/RepoC2Rust/created_project/md5_1744103854094)\nerror[E0502]: cannot borrow `context` as immutable because it is also borrowed as mutable\n   --> src/src/md5_c.rs:239:23\n    |\n239 |     context.aucBuffer[context.uiPos] = 0x80;\n    |     -------          -^^^^^^^-------\n    |     |                ||\n    |     |                |immutable borrow occurs here\n    |     |                mutable borrow later used here\n    |     mutable borrow occurs here\n    |\nhelp: try adding a local storing this...\n   --> src/src/md5_c.rs:239:23\n    |\n239 |     context.aucBuffer[context.uiPos] = 0x80;\n    |                       ^^^^^^^^^^^^^\nhelp: ...and then using that local here\n   --> src/src/md5_c.rs:239:22\n    |\n239 |     context.aucBuffer[context.uiPos] = 0x80;\n    |                      ^^^^^^^^^^^^^^^\n\nerror[E0502]: cannot borrow `context` as immutable because it is also borrowed as mutable\n   --> src/src/md5_c.rs:243:31\n    |\n243 |             context.aucBuffer[context.uiPos] = 0;\n    |             -------          -^^^^^^^-------\n    |             |                ||\n    |             |                |immutable borrow occurs here\n    |             |                mutable borrow later used here\n    |             mutable borrow occurs here\n    |\nhelp: try adding a local storing this...\n   --> src/src/md5_c.rs:243:31\n    |\n243 |             context.aucBuffer[context.uiPos] = 0;\n    |                               ^^^^^^^^^^^^^\nhelp: ...and then using that local here\n   --> src/src/md5_c.rs:243:30\n    |\n243 |             context.aucBuffer[context.uiPos] = 0;\n    |                              ^^^^^^^^^^^^^^^\n\nerror[E0502]: cannot borrow `context` as immutable because it is also borrowed as mutable\n   --> src/src/md5_c.rs:248:31\n    |\n248 |             context.aucBuffer[context.uiPos] = 0;\n    |             -------          -^^^^^^^-------\n    |             |                ||\n    |             |                |immutable borrow occurs here\n    |             |                mutable borrow later used here\n    |             mutable borrow occurs here\n    |\nhelp: try adding a local storing this...\n   --> src/src/md5_c.rs:248:31\n    |\n248 |             context.aucBuffer[context.uiPos] = 0;\n    |                               ^^^^^^^^^^^^^\nhelp: ...and then using that local here\n   --> src/src/md5_c.rs:248:30\n    |\n248 |             context.aucBuffer[context.uiPos] = 0;\n    |                              ^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0502`.\nerror: could not compile `my_proj` (lib) due to 3 previous errors\n"}, {"c_code": "void VOS_MD5FinalEx(uint8_t digest[], uint32_t bufLen, MD5_CTX *context)\n    {\n        bool needAnotherBuff = 0;\n\n        if ((digest == NULL) || (context == NULL) || (bufLen < MD5_DIGEST_LEN))\n        {\n            return;\n        }\n\n        needAnotherBuff = VOS_MD5PadBuff(context);\n        VOS_MD5CalcDigestOfBuff(context);\n\n        if (needAnotherBuff)\n        {\n            context->uiPos = 0;\n            while (context->uiPos < MD5_TEXT_IN_BUFFER_MAX)\n            {\n                context->aucBuffer[context->uiPos] = 0;\n                context->uiPos++;\n            }\n            MD5_RECORD_MESSAGE_LEN(context);\n            VOS_MD5CalcDigestOfBuff(context);\n        }\n\n        MD5_COMPOSE_DIGEST(digest, context->aulState);\n\n        (void)memset_s(context, sizeof(MD5_CTX), 0, sizeof(MD5_CTX));\n    }", "rust_code": "pub fn VOS_MD5FinalEx(mut digest: Ptr<u8>, mut bufLen: u32, mut context: Ptr<MD5_CTX>) {\n    let mut needAnotherBuff: bool = false;\n\n    if (digest == NULL!()).as_bool() || (context == NULL!()).as_bool() || (bufLen < MD5_DIGEST_LEN!()).as_bool() {\n        return;\n    }\n\n    needAnotherBuff = VOS_MD5PadBuff(context.cast()).cast();\n    VOS_MD5CalcDigestOfBuff(context.cast());\n\n    if needAnotherBuff.as_bool() {\n        context.uiPos = 0;\n        while (context.uiPos < MD5_TEXT_IN_BUFFER_MAX!()).as_bool() {\n            context.aucBuffer[context.uiPos] = 0;\n            context.uiPos += 1;\n        }\n        MD5_RECORD_MESSAGE_LEN!(context);\n        VOS_MD5CalcDigestOfBuff(context.cast());\n    }\n\n    MD5_COMPOSE_DIGEST!(digest, context.aulState);\n\n    c_memset_s!(context, c_sizeofval!(*context), 0, c_sizeofval!(*context)).cast::<Void>();\n}\n", "error_msg": "    Checking my_proj v0.1.0 (/home/ytr/RepoC2Rust/created_project/md5_1744103854567)\nerror[E0502]: cannot borrow `context` as immutable because it is also borrowed as mutable\n   --> src/src/md5_c.rs:313:31\n    |\n313 |             context.aucBuffer[context.uiPos] = 0;\n    |             -------          -^^^^^^^-------\n    |             |                ||\n    |             |                |immutable borrow occurs here\n    |             |                mutable borrow later used here\n    |             mutable borrow occurs here\n    |\nhelp: try adding a local storing this...\n   --> src/src/md5_c.rs:313:31\n    |\n313 |             context.aucBuffer[context.uiPos] = 0;\n    |                               ^^^^^^^^^^^^^\nhelp: ...and then using that local here\n   --> src/src/md5_c.rs:313:30\n    |\n313 |             context.aucBuffer[context.uiPos] = 0;\n    |                              ^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0502`.\nerror: could not compile `my_proj` (lib) due to 1 previous error\n"}]}