{
    "typedef AVL3_COMPARE AVLL_COMPARE;": "pub type AVLL_COMPARE = AVL3_COMPARE;\n",
    "typedef AVL3_NODE AVLL_NODE;": "pub type AVLL_NODE = AVL3_NODE;\n",
    "typedef struct avll_tree\n    {\n        AVL3_TREE stTree;\n        AVL3_TREE_INFO stTreeInfo;\n    } AVLL_TREE;": "#[repr(C)]\n#[derive(Default, Clone, Copy)]\npub struct avll_tree {\n    pub stTree: AVL3_TREE,\n    pub stTreeInfo: AVL3_TREE_INFO,\n}\n\npub type AVLL_TREE = avll_tree;\n",
    "typedef long (*AVL3_COMPARE)(const void *, const void *);": "pub type AVL3_COMPARE = FuncPtr<fn(VoidPtr, VoidPtr) -> i64>;\n",
    "typedef int (*AVL3_COMPARE)(const void *, const void *);": "pub type AVL3_COMPARE = FuncPtr<fn(VoidPtr, VoidPtr) -> i32>;\n",
    "typedef struct avl3_node\n    {\n        struct avl3_node *pstParent;\n        struct avl3_node *pstLeft;\n        struct avl3_node *pstRight;\n        short int sLHeight;\n        short int sRHeight;\n    } AVL3_NODE;": "#[repr(C)]\n#[derive(Default, Clone, Copy)]\npub struct avl3_node {\n    pub pstParent: Ptr<avl3_node>,\n    pub pstLeft: Ptr<avl3_node>,\n    pub pstRight: Ptr<avl3_node>,\n    pub sLHeight: i16,\n    pub sRHeight: i16,\n}\n\npub type AVL3_NODE = avl3_node;\n",
    "typedef struct avl3_tree_info\n    {\n        AVL3_COMPARE pfCompare;\n        unsigned short int usKeyOffset;\n        unsigned short int usNodeOffset;\n    } AVL3_TREE_INFO;": "#[repr(C)]\n#[derive(Default, Clone, Copy)]\npub struct avl3_tree_info {\n    pub pfCompare: AVL3_COMPARE,\n    pub usKeyOffset: u16,\n    pub usNodeOffset: u16,\n}\n\npub type AVL3_TREE_INFO = avl3_tree_info;\n",
    "typedef struct avl3_tree\n    {\n        AVL3_NODE *pstRoot;\n        AVL3_NODE *pstFirst;\n        AVL3_NODE *pstLast;\n    } AVL3_TREE;": "#[repr(C)]\n#[derive(Default, Clone, Copy)]\npub struct avl3_tree {\n    pub pstRoot: Ptr<AVL3_NODE>,\n    pub pstFirst: Ptr<AVL3_NODE>,\n    pub pstLast: Ptr<AVL3_NODE>,\n}\n\npub type AVL3_TREE = avl3_tree;\n",
    "typedef long (*AVL_V2_COMPARE_FUNC)(const void *, const void *);": "pub type AVL_V2_COMPARE_FUNC = FuncPtr<fn(VoidPtr, VoidPtr) -> i64>;\n",
    "typedef struct avl_node\n    {\n        struct avl_node *pstParent;\n        struct avl_node *pstLeft;\n        struct avl_node *pstRight;\n        short int sLHeight;\n        short int sRHeight;\n        void *pSelf;\n        void *pKey;\n    } AVL_NODE;": "#[repr(C)]\n#[derive(Default, Clone, Copy)]\npub struct avl_node {\n    pub pstParent: Ptr<avl_node>,\n    pub pstLeft: Ptr<avl_node>,\n    pub pstRight: Ptr<avl_node>,\n    pub sLHeight: i16,\n    pub sRHeight: i16,\n    pub pSelf: VoidPtr,\n    pub pKey: VoidPtr,\n}\n\npub type AVL_NODE = avl_node;\n",
    "typedef struct avl_tree\n    {\n        AVL_V2_COMPARE_FUNC pfnCompare;\n        AVL_NODE *pstRoot;\n        AVL_NODE *pstFirst;\n        AVL_NODE *pstLast;\n    } AVL_TREE;": "#[repr(C)]\n#[derive(Default, Clone, Copy)]\npub struct avl_tree {\n    pub pfnCompare: AVL_V2_COMPARE_FUNC,\n    pub pstRoot: Ptr<AVL_NODE>,\n    pub pstFirst: Ptr<AVL_NODE>,\n    pub pstLast: Ptr<AVL_NODE>,\n}\n\npub type AVL_TREE = avl_tree;\n",
    "typedef struct AVLBaseNode\n    {\n        struct AVLBaseNode *pstParent;\n        struct AVLBaseNode *pstLeft;\n        struct AVLBaseNode *pstRight;\n        short int sLHeight;\n        short int sRHeight;\n    } AVLBASE_NODE_S;": "#[repr(C)]\n#[derive(Default, Clone, Copy)]\npub struct AVLBaseNode {\n    pub pstParent: Ptr<AVLBaseNode>,\n    pub pstLeft: Ptr<AVLBaseNode>,\n    pub pstRight: Ptr<AVLBaseNode>,\n    pub sLHeight: i16,\n    pub sRHeight: i16,\n}\n\npub type AVLBASE_NODE_S = AVLBaseNode;\n",
    "typedef struct AVLBaseTree\n    {\n        AVLBASE_NODE_S *pstRoot;\n        AVLBASE_NODE_S *pstFirst;\n        AVLBASE_NODE_S *pstLast;\n    } AVLBASE_TREE_S;": "#[repr(C)]\n#[derive(Default, Clone, Copy)]\npub struct AVLBaseTree {\n    pub pstRoot: Ptr<AVLBASE_NODE_S>,\n    pub pstFirst: Ptr<AVLBASE_NODE_S>,\n    pub pstLast: Ptr<AVLBASE_NODE_S>,\n}\n\npub type AVLBASE_TREE_S = AVLBaseTree;\n"
}