{
    "#define V_AVLL_H": "macro_rules! V_AVLL_H { () => { } }\npub(crate) use V_AVLL_H;\n",
    "#define AVL_ADAPT_H": "macro_rules! AVL_ADAPT_H { () => { } }\npub(crate) use AVL_ADAPT_H;\n",
    "#define AVL_NULL_PTR 0L": "macro_rules! AVL_NULL_PTR { () => { NULL!() } }\npub(crate) use AVL_NULL_PTR;\n",
    "#define AVL_TRUE 1": "macro_rules! AVL_TRUE { () => { 1 } }\npub(crate) use AVL_TRUE;\n",
    "#define AVL_FALSE 0": "macro_rules! AVL_FALSE { () => { 0 } }\npub(crate) use AVL_FALSE;\n",
    "#define AVL_INT32_TO_LONG 1": "macro_rules! AVL_INT32_TO_LONG { () => { 1 } }\npub(crate) use AVL_INT32_TO_LONG;\n",
    "#define VOS_PACKEND_ZERO 1": "macro_rules! VOS_PACKEND_ZERO { () => { 1 } }\npub(crate) use VOS_PACKEND_ZERO;\n",
    "#define AVL_PACKEND_ZERO 1": "macro_rules! AVL_PACKEND_ZERO { () => { 1 } }\npub(crate) use AVL_PACKEND_ZERO;\n",
    "#define V_AVL3_H": "macro_rules! V_AVL3_H { () => { } }\npub(crate) use V_AVL3_H;\n",
    "#define V_AVL_BASE_H": "macro_rules! V_AVL_BASE_H { () => { } }\npub(crate) use V_AVL_BASE_H;\n",
    "#define V_AVLBASE_H": "macro_rules! V_AVLBASE_H { () => { } }\npub(crate) use V_AVLBASE_H;\n",
    "#define V_AVL3_INNER_H": "macro_rules! V_AVL3_INNER_H { () => { } }\npub(crate) use V_AVL3_INNER_H;\n"
}